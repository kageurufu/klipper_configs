[save_variables]  # Required for saving MPC settings

[gcode_macro MPC_SET_MATERIAL]
description: Set heater MPC parameters for a given material
variable_filament_defaults:
    {
        ## ( density, heat capacity )  # suggested heat capacity range
        "PLA"       : ( 1.25, 2.20 ),  # 1.80 - 2.20
        "PETG"      : ( 1.27, 2.20 ),  # 1.70 - 2.20
        "PC+ABS"    : ( 1.15, 2.20 ),  # 1.50 - 2.20
        "ABS"       : ( 1.06, 2.40 ),  # 1.25 - 2.40
        "ASA"       : ( 1.07, 2.10 ),  # 1.30 - 2.10
        "PA6"       : ( 1.12, 2.50 ),  # 2.00 - 2.50
        "PA"        : ( 1.15, 2.50 ),  # 2.00 - 2.50
        "PC"        : ( 1.20, 1.90 ),  # 1.10 - 1.90
        "TPU"       : ( 1.21, 2.00 ),  # 1.50 - 2.00
        "TPU-90A"   : ( 1.15, 2.00 ),  # 1.50 - 2.00
        "TPU-95A"   : ( 1.22, 2.00 ),  # 1.50 - 2.00
        "ABS-CF"    : ( 1.11, 2.40 ),  # 1.25 - 2.40
        "ASA-CF"    : ( 1.11, 2.10 ),  # 1.30 - 2.10
        "PA6-CF"    : ( 1.19, 2.50 ),  # 2.00 - 2.50
        "PC+ABS-CF" : ( 1.22, 2.20 ),  # 1.50 - 2.20
        "PC+CF"     : ( 1.36, 1.90 ),  # 1.10 - 1.90
        "PLA-CF"    : ( 1.29, 2.20 ),  # 1.80 - 2.20
        "PETG-CF"   : ( 1.30, 2.20 ),  # 1.70 - 2.20
    }
gcode:
    {% set material = params.MATERIAL | upper %}
    {% set heater = params.HEATER | default('extruder') %}
    {% set extruder_config = printer.configfile.settings[heater] %}

    {% set filament_table = filament_defaults.copy() %}
    {% do filament_table.update(printer.save_variables.variables.mpc_materials | default({})) %}
      
    {% if material in filament_table %}
        {% set (density, heat_capacity) = filament_table[material] %}

        RESPOND PREFIX=üî• MSG="Configured {heater} MPC for {material}. Density: {density}, Heat Capacity: {heat_capacity}"
    {% else %}
        {% set density = extruder_config.filament_density %}
        {% set heat_capacity=extruder_config.filament_heat_capacity %}

        RESPOND PREFIX=üî• MSG="Unknown material '{material}', using default mpc parameters for {heater}"
    {% endif %}

    MPC_SET HEATER={heater} FILAMENT_DENSITY={density} FILAMENT_HEAT_CAPACITY={heat_capacity}


[gcode_macro MPC_QUERY_MATERIAL]
description: Get the current density and heat capacity for a material.
gcode:
    {% if params.MATERIAL      is not defined %} {action_raise_error("MATERIAL= parameter must be provided")}      {% endif %}

    {% set material = params.MATERIAL | upper %}
    {% set filament_table = printer['gcode_macro MPC_SET_MATERIAL'].filament_defaults.copy() %} 
    {% do filament_table.update(printer.save_variables.variables.mpc_materials | default({})) %}

    {% if material in filament_table %}

      {% set (density, heat_capacity) = filament_table[material] %}

      RESPOND PREFIX=üî• MSG="Material: {material}, density: {density}, heat capacity: {heat_capacity}"

    {% else %}

      RESPOND PREFIX=‚ùî MSG="Material {material} is not configured, default parameters will apply"

    {% endif %}
    

[gcode_macro MPC_UPDATE_MATERIAL]
description: Change the density and heat capacity for a given material
gcode:
    {% if params.MATERIAL      is not defined %} {action_raise_error("MATERIAL= parameter must be provided")}      {% endif %}
    {% if params.DENSITY       is not defined %} {action_raise_error("DENSITY= parameter must be provided")}       {% endif %}
    {% if params.HEAT_CAPACITY is not defined %} {action_raise_error("HEAT_CAPACITY= parameter must be provided")} {% endif %}

    {% set material       = params.MATERIAL      | upper %}
    {% set density        = params.DENSITY       | float %}
    {% set heat_capacity  = params.HEAT_CAPACITY | float %}

    {% set saved_settings = printer.save_variables.variables.mpc_materials | default({}) %}
    {% do saved_settings.update({ material: (density, heat_capacity) }) %}

    SAVE_VARIABLE VARIABLE=mpc_materials VALUE='{saved_settings | tojson}'
    RESPOND PREFIX=üíæ MSG="New MPC parameters for {material} saved. density: {density}, heat capacity: {heat_capacity}"


[gcode_macro MPC_RESET_MATERIAL]
description: Clear any user saved configuration for a material
gcode:
    {% if params.MATERIAL      is not defined %} {action_raise_error("MATERIAL= parameter must be provided")}      {% endif %}
    
    {% set material = params.MATERIAL | upper %}
    {% set saved_settings = printer.save_variables.variables.mpc_materials | default({}) %}

    {% if material in saved_settings %}
      {% set (density, heat_capacity) = saved_settings[material] %}
      {% do saved_settings.pop(material) %}
    
      SAVE_VARIABLE VARIABLE=mpc_materials VALUE='{saved_settings | tojson}'
      MPC_QUERY_MATERIAL MATERIAL={material}

    {% else %}
      RESPOND PREFIX=‚ùî MSG="Material {material} has no saved settings to clear"
    {% endif %}
