[stepper_z]
endstop_pin: probe:z_virtual_endstop
position_min: -5

[probe]
x_offset: 0
y_offset: 0
# z_offset: -0.5
# z_offset: -0.570
# z_offset: -1.201
# z_offset: -0.616
speed: 3
lift_speed: 20
samples: 3
samples_result: median
sample_retract_dist: 2
samples_tolerance: 0.1
samples_tolerance_retries: 3

activate_gcode:
  {% set SAFE_PROBE_RANGE = [(0, 300), (0, 280)] %}
  {% if not (
    (SAFE_PROBE_RANGE[0][0] <= printer.toolhead.position[0] <= SAFE_PROBE_RANGE[0][1]) and
    (SAFE_PROBE_RANGE[1][0] <= printer.toolhead.position[1] <= SAFE_PROBE_RANGE[1][1])
  ) %}
    {action_raise_error("Probing may only occur within %s,%s" % (SAFE_PROBE_RANGE[0], SAFE_PROBE_RANGE[1]))}
  {% endif %}

  {% set PROBE_TEMP = 150 %}
  {% set MAX_TEMP = PROBE_TEMP + 5 %}
  {% set ACTUAL_TEMP = printer.extruder.temperature %}
  {% set TARGET_TEMP = printer.extruder.target %}
  {% set FAN_SPEED = printer.fan.speed %}
  {% set Z_PROBE_CURRENT = 0.3 %}

  {% if TARGET_TEMP > PROBE_TEMP %}
    { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
  {% endif %}

  # Temperature target is already low enough, but nozzle may still be too hot.
  {% if ACTUAL_TEMP > MAX_TEMP %}
    { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
    M106 S1.0
    TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
    M106 S{FAN_SPEED}
  {% endif %}

  SET_TMC_CURRENT STEPPER=stepper_z CURRENT={Z_PROBE_CURRENT}
  SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={Z_PROBE_CURRENT}
  SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={Z_PROBE_CURRENT}
  SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={Z_PROBE_CURRENT}

deactivate_on_each_sample: False
deactivate_gcode:
  SET_TMC_CURRENT STEPPER=stepper_z CURRENT={printer.configfile.settings['tmc2209 stepper_z'].run_current}
  SET_TMC_CURRENT STEPPER=stepper_z1 CURRENT={printer.configfile.settings['tmc2209 stepper_z1'].run_current}
  SET_TMC_CURRENT STEPPER=stepper_z2 CURRENT={printer.configfile.settings['tmc2209 stepper_z2'].run_current}
  SET_TMC_CURRENT STEPPER=stepper_z3 CURRENT={printer.configfile.settings['tmc2209 stepper_z3'].run_current}

[duplicate_pin_override]
pins: toolhead:ENDSTOP3 

[gcode_macro set_toolhead_crash_detection]
gcode:
  SET_GCODE_VARIABLE MACRO=_toolhead_crash_detect VARIABLE=enable VALUE={params.ENABLE | default(0)}

[gcode_macro _toolhead_crash_detect]
variable_enable: 0
gcode:
  {% if enable == 1
      and printer.print_stats.state == 'printing'
      and not printer.pause_resume.is_paused
  %}
      RESPOND TYPE=error MSG="Toolhead crash detected"
      NOTIFY "Toolhead crash detected"
      { action_call_remote_method(
            "publish_mqtt_topic",
            topic="klipper/alert",
            payload={"trigger": "toolhead_crash_sensor", 
                     "message": "The toolhead crashed during printed"} | tojson,
            retain=False,
            use_prefix=True,
      ) }
      PAUSE
  {% endif %}

[gcode_button toolhead_crash_detection]
pin: toolhead:ENDSTOP3
press_gcode:
  # RESPOND MSG="toolhead lifted"
  _toolhead_crash_detect
# release_gcode:
#   RESPOND MSG="toolhead dropped"
#   _toolhead_crash_detect

[gcode_macro NOTIFY]
gcode:
  M117 $MR$:{% if params.TITLE %}{params.TITLE}|{% endif %}{params.BODY}
  M117 {% if params.TITLE %}{params.TITLE}: {% endif %}{params.BODY}
  UPDATE_DELAYED_GCODE ID=CLEAR_DISPLAY DURATION=60

[gcode_macro DEBUG_PARAMS]
gcode:
  {action_respond_info("Params: {!r}".format(params))}
  {action_respond_info("Raw Params: {!r}".format(rawparams))}